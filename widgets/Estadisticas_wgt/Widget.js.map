{"version":3,"sources":["../../../widgets/Estadisticas_wgt/Widget.js"],"names":["declare","BaseWidget","lang","LayerInfos","Query","QueryTask","StatisticDefinition","on","baseClass","layersMap","iniClause","field_x_vertical_bar","field_y_vertical_bar","label_y_vertical_bar","field_x_pie","field_y_pie","label_y_pie","field_x_horizontal_bar","field_y_horizontal_bar","label_y_horizontal_bar","postCreate","self","_getAllLayers","_drawVerticalBarChart","_drawPieChart","_drawHorizontalBarChart","getInstance","map","itemInfo","then","hitch","layerInfosObj","id","config","service_id_vertical_bar","feature","getLayerInfoById","url","getUrl","queryTask","query","where","groupByFieldsForStatistics","countStatDef","statisticType","onStatisticField","outStatisticFieldName","orderByFields","outStatistics","execute","results","x","features","i","attributes","y","_VerticalBarChart","ctx","VerticalBarAp","getContext","canvas","height","myChart","Chart","type","data","labels","datasets","label","borderWidth","backgroundColor","options","legend","display","scales","yAxes","ticks","beginAtZero","plugins","render","service_id_pie","_pieChart","PieAp","myPieChart","hoverOffset","responsive","animation","animateScale","animateRotate","service_id_horizontal_bar","_HorizontalBarChart","HorizontalBarAp","_acordeonFunction","evt","target","classList","toggle","panel","nextElementSibling","startup","inherited","arguments"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport lang from 'dojo/_base/lang';\r\nimport LayerInfos from 'jimu/LayerInfos/LayerInfos';\r\nimport Query from \"esri/tasks/query\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport StatisticDefinition from \"esri/tasks/StatisticDefinition\";\r\nimport on from 'dojo/on';\r\nimport '../../libs/chartjs/chartjs-plugin-labels'\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([\r\n    BaseWidget,\r\n    Query,\r\n    QueryTask,\r\n    StatisticDefinition\r\n], {\r\n\r\n    // Custom widget code goes here\r\n\r\n    baseClass: 'estadisticas-wgt',\r\n\r\n    // add additional properties here\r\n    layersMap: [],\r\n    iniClause: '1=1',\r\n\r\n    // Elementos del grafico de barras vertical\r\n    // feature_id_vertical_bar: '',\r\n    field_x_vertical_bar: 'DEPA',\r\n    field_y_vertical_bar: 'COUNTDEPA',\r\n    label_y_vertical_bar: 'Numero de Reinfos',\r\n\r\n    // Elementos del gr√°fico de torta\r\n    // feature_id_vertical_bar: '',\r\n    field_x_pie: 'LEYENDA',\r\n    field_y_pie: 'COUNTLEYENDA',\r\n    label_y_pie: 'Tipo de persona',\r\n\r\n    // Elementos del grafico de barras horizontal\r\n    // feature_id_vertical_bar: '',\r\n    field_x_horizontal_bar: 'LEYENDA',\r\n    field_y_horizontal_bar: 'COUNTLEYENDA',\r\n    label_y_horizontal_bar: 'Origen',\r\n\r\n\r\n    // methods to communication with app container:\r\n    postCreate() {\r\n        self = this;\r\n        this._getAllLayers();\r\n        this._drawVerticalBarChart();\r\n        this._drawPieChart();\r\n        this._drawHorizontalBarChart();\r\n\r\n    },\r\n\r\n    _getAllLayers() {\r\n        // _layerInfosObjClone = []\r\n        LayerInfos.getInstance(this.map, this.map.itemInfo)\r\n            .then(lang.hitch(this, function(layerInfosObj) {\r\n                this.layersMap = layerInfosObj;\r\n            }));\r\n    },\r\n\r\n    _drawVerticalBarChart() {\r\n        var id = this.config.service_id_vertical_bar;\r\n        var feature = this.layersMap.getLayerInfoById(id);\r\n        var url = feature.getUrl();\r\n\r\n        var queryTask = new QueryTask(url);\r\n        var query = new Query();\r\n\r\n        // Eliminar la siguiente linea en produccion\r\n        this.iniClause = self.field_x_vertical_bar + \" NOT LIKE '%/%'\";\r\n\r\n        query.where = this.iniClause;\r\n        query.groupByFieldsForStatistics = [self.field_x_vertical_bar];\r\n\r\n        var countStatDef = new StatisticDefinition();\r\n        countStatDef.statisticType = \"count\";\r\n        countStatDef.onStatisticField = self.field_x_vertical_bar;\r\n        countStatDef.outStatisticFieldName = self.field_y_vertical_bar;\r\n\r\n        query.orderByFields = [`COUNT(${self.field_x_vertical_bar}) DESC`]\r\n\r\n        query.outStatistics = [countStatDef];\r\n\r\n        queryTask.execute(query, function(results) {\r\n            x = results.features.map((i) => i.attributes[self.field_x_vertical_bar]);\r\n            y = results.features.map((i) => i.attributes[self.field_y_vertical_bar]);\r\n            self._VerticalBarChart(x, y);\r\n        });\r\n\r\n    },\r\n\r\n    _VerticalBarChart(x, y) {\r\n        var ctx = self.VerticalBarAp.getContext('2d');\r\n        ctx.canvas.height = 500;\r\n        var myChart = new Chart(ctx, {\r\n            type: 'horizontalBar',\r\n            data: {\r\n                labels: x,\r\n                datasets: [{\r\n                    label: self.label_y_vertical_bar,\r\n                    data: y,\r\n                    borderWidth: 1,\r\n                    backgroundColor: '#36a2eb'\r\n                }]\r\n            },\r\n            options: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                plugins: {\r\n                    labels: {\r\n                        render: 'value',\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    _drawPieChart() {\r\n        var id = this.config.service_id_pie;\r\n        var feature = this.layersMap.getLayerInfoById(id);\r\n        var url = feature.getUrl();\r\n\r\n        var queryTask = new QueryTask(url);\r\n        var query = new Query();\r\n\r\n        // Eliminar la siguiente linea en produccion\r\n        // this.iniClause = self.field_x_vertical_bar + \" NOT LIKE '%/%'\";\r\n\r\n        query.where = this.iniClause;\r\n        query.groupByFieldsForStatistics = [self.field_x_pie];\r\n\r\n        var countStatDef = new StatisticDefinition();\r\n        countStatDef.statisticType = \"count\";\r\n        countStatDef.onStatisticField = self.field_x_pie;\r\n        countStatDef.outStatisticFieldName = self.field_y_pie;\r\n\r\n        query.outStatistics = [countStatDef];\r\n\r\n        queryTask.execute(query, function(results) {\r\n            x = results.features.map((i) => i.attributes[self.field_x_pie]);\r\n            y = results.features.map((i) => i.attributes[self.field_y_pie]);\r\n            self._pieChart(x, y);\r\n        });\r\n    },\r\n\r\n    _pieChart(x, y) {\r\n        var ctx = self.PieAp.getContext('2d');\r\n        ctx.canvas.height = 250;\r\n        var myPieChart = new Chart(ctx, {\r\n            type: 'doughnut',\r\n            data: {\r\n                labels: x,\r\n                datasets: [{\r\n                    label: self.label_y_pie,\r\n                    data: y,\r\n                    backgroundColor: [\r\n                        '#fff48f',\r\n                        '#91d18b',\r\n                        'rgb(54, 162, 235)',\r\n                        'rgb(255, 205, 86)',\r\n                        'rgb(255, 99, 132)',\r\n                    ],\r\n                    hoverOffset: 4\r\n                }]\r\n            },\r\n            // plugins: [ChartDataLabels],\r\n            options: {\r\n                responsive: true,\r\n                animation: {\r\n                    animateScale: true,\r\n                    animateRotate: true\r\n                },\r\n                plugins: {\r\n                    labels: {\r\n                        render: 'value',\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    _drawHorizontalBarChart() {\r\n        var id = this.config.service_id_horizontal_bar;\r\n        var feature = this.layersMap.getLayerInfoById(id);\r\n        var url = feature.getUrl();\r\n\r\n        var queryTask = new QueryTask(url);\r\n        var query = new Query();\r\n\r\n        // Eliminar la siguiente linea en produccion\r\n        // this.iniClause = self.field_x_vertical_bar + \" NOT LIKE '%/%'\";\r\n\r\n        query.where = this.iniClause;\r\n        query.groupByFieldsForStatistics = [self.field_x_horizontal_bar];\r\n\r\n        var countStatDef = new StatisticDefinition();\r\n        countStatDef.statisticType = \"count\";\r\n        countStatDef.onStatisticField = self.field_x_horizontal_bar;\r\n        countStatDef.outStatisticFieldName = self.field_y_horizontal_bar;\r\n\r\n        query.outStatistics = [countStatDef];\r\n\r\n        queryTask.execute(query, function(results) {\r\n            x = results.features.map((i) => i.attributes[self.field_x_horizontal_bar]);\r\n            y = results.features.map((i) => i.attributes[self.field_y_horizontal_bar]);\r\n            self._HorizontalBarChart(x, y);\r\n        });\r\n\r\n    },\r\n\r\n    _HorizontalBarChart(x, y) {\r\n        var ctx = self.HorizontalBarAp.getContext('2d');\r\n        ctx.canvas.height = 250;\r\n        var myChart = new Chart(ctx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: x,\r\n                datasets: [{\r\n                    label: self.label_y_horizontal_bar,\r\n                    data: y,\r\n                    backgroundColor: [\r\n                        '#fff48f',\r\n                        '#91d18b',\r\n                        'rgb(54, 162, 235)',\r\n                        'rgb(255, 205, 86)',\r\n                        'rgb(255, 99, 132)',\r\n                    ],\r\n                    borderWidth: 1,\r\n                }]\r\n            },\r\n            options: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                },\r\n                plugins: {\r\n                    labels: {\r\n                        render: 'value',\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    _acordeonFunction(evt) {\r\n        evt.target.classList.toggle(\"active\");\r\n        var panel = evt.target.nextElementSibling;\r\n        panel.classList.toggle(\"active\");\r\n        // if (panel.style.maxHeight) {\r\n        //     panel.style.maxHeight = null;\r\n        // } else {\r\n        //     panel.style.maxHeight = panel.scrollHeight + \"px\";\r\n        // }\r\n    },\r\n    startup() {\r\n        this.inherited(arguments);\r\n        // console.log('Estadisticas_wgt::startup');\r\n\r\n    },\r\n    // onOpen() {\r\n    //     console.log('Estadisticas_wgt::onOpen');\r\n    // },\r\n    // onClose(){\r\n    //   console.log('Estadisticas_wgt::onClose');\r\n    // },\r\n    // onMinimize(){\r\n    //   console.log('Estadisticas_wgt::onMinimize');\r\n    // },\r\n    // onMaximize(){\r\n    //   console.log('Estadisticas_wgt::onMaximize');\r\n    // },\r\n    // onSignIn(credential){\r\n    //   console.log('Estadisticas_wgt::onSignIn', credential);\r\n    // },\r\n    // onSignOut(){\r\n    //   console.log('Estadisticas_wgt::onSignOut');\r\n    // }\r\n    // onPositionChange(){\r\n    //   console.log('Estadisticas_wgt::onPositionChange');\r\n    // },\r\n    // resize(){\r\n    //   console.log('Estadisticas_wgt::resize');\r\n    // }\r\n});"]}